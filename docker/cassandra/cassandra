#!/bin/bash -xue

shopt -s nullglob

. /usr/share/cassandra/cassandra.in.sh

JVM_OPTS=${JVM_OPTS:=}

JVM_OPTS="${JVM_OPTS} -Dcassandra.config=${CASSANDRA_HOME}/cassandra.yaml:/etc/cassandra/cassandra.yaml:/etc/cassandra/cassandra.yaml.d"

# provides hints to the JIT compiler
JVM_OPTS="${JVM_OPTS} -XX:CompileCommandFile=${CASSANDRA_HOME}/hotspot_compiler"

# add the jamm agent
JVM_OPTS="${JVM_OPTS} -javaagent:${CASSANDRA_HOME}/agents/jamm.jar"

# sigar support
JVM_OPTS="${JVM_OPTS} -Djava.library.path=${CASSANDRA_HOME}/lib/sigar-bin"

# heap dumps to tmp
JVM_OPTS="${JVM_OPTS} -XX:HeapDumpPath=/var/tmp/cassandra-`date +%s`-pid$$.hprof"

# determine Java version, the assumption here is that C* 4.x runs with Java 11 and C* 3.11.x runs wih Java 8

# read additional JVM options from jvm.options files
for options_file in "${CASSANDRA_CONF}/jvm-operator.options" "${CASSANDRA_CONF}/jvm-jmx.options" "${CASSANDRA_CONF}/jvm.options" "${CASSANDRA_CONF}/jvm.options.d"/*.options
do
    JVM_OPTS="${JVM_OPTS} "$((sed -ne "/^-/p" | tr '\n' ' ') < "${options_file}")
done

# Cassandra 4 runs on Java 11 so we need to add specific flags to JVM
if [ "$(grep -c "^4" /usr/share/cassandra/cassandra_version)" = "1" ]; then
  JVM_OPTS="${JVM_OPTS} "$((sed -ne "/^-/p" | tr '\n' ' ') < "${CASSANDRA_CONF}/jvm11-server.options")
fi

# source additional environment settings
for env_file in "${CASSANDRA_CONF}/cassandra-env.sh" "${CASSANDRA_CONF}/cassandra-env.sh.d"/*.sh
do
    . "${env_file}"
done

# if restore in init container was done, we need to move initial tokens to directory cassandra will pick it up from
# /etc/cassandra/cassandra.yaml.d is mounted as config volume and it is not persistent hence
# we move it there from persistent volume and if cluster is restarted, this file will not be in
# persistent volume anymore so nothing will be copied over (but Cassandra will be already setup with tokens as
# it is enough to set this in cassandra.yaml just once and Cassandra will cache it internally).
if [[ -f "/var/lib/cassandra/restore_done" ]] && [[ -f "/var/lib/cassandra/tokens.yaml" ]]; then
    mv /var/lib/cassandra/tokens.yaml /etc/cassandra/cassandra.yaml.d/002-tokens.yaml
    echo "auto_bootstrap: false" > /etc/cassandra/cassandra.yaml.d/003-disable-autobootstrap.yaml
fi

exec -a cassandra /usr/bin/java \
    -cp "${CASSANDRA_CLASSPATH}" \
    -ea \
    ${JVM_OPTS} \
    -Dcassandra-foreground=yes \
    org.apache.cassandra.service.CassandraDaemon
